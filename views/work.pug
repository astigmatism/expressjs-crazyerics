extends basic

block content
    script.
        var camera, scene, renderer, mesh;

        getVibrant(function(swatches) {
            mergeImage(swatches, function(img) {
                init(swatches, img);
                animate();
            });
        });

        function init(swatches, img) {
            //fov, aspect, near, far
            camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 1, 1000 );
            camera.position.z = 200;

            var rgb = 'rgb(' + swatches[0] + ', ' + swatches[1] + ', ' + swatches[2] + ')';

            var frontTexture = new THREE.TextureLoader().load( '/images/boxes/front.jpg' );
            var backTexture = new THREE.TextureLoader().load( img );

            var frontMaterial = new THREE.MeshBasicMaterial( { map: frontTexture } );
            var backMaterial = new THREE.MeshBasicMaterial({ 
                map: backTexture
            });
            var color = new THREE.MeshBasicMaterial( { color: rgb } );
            
            var materials = [
                color,        // Left side
                color,       // Right side
                color,         // Top side
                color,      // Bottom side
                frontMaterial,       // Front side
                backMaterial         // Back side
            ];

            var geometry = new THREE.BoxBufferGeometry( 53.75, 73.75, 10 );

            scene = new THREE.Scene();
            mesh = new THREE.Mesh( geometry, materials);

            scene.add( mesh );
            renderer = new THREE.WebGLRenderer();
            renderer.setPixelRatio( window.devicePixelRatio );
            renderer.setSize( window.innerWidth, window.innerHeight );
            document.body.appendChild( renderer.domElement );
            //
            window.addEventListener( 'resize', onWindowResize, false );
        }
        function onWindowResize() {
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
            renderer.setSize( window.innerWidth, window.innerHeight );
        }
        function animate() {
            requestAnimationFrame( animate );
            //mesh.rotation.x += 0.005;
            mesh.rotation.y += 0.01;
            renderer.render( scene, camera );
        }
        function getVibrant(callback) {

            var img = document.createElement('img');
            img.setAttribute('src', '/images/boxes/front.jpg');

            img.addEventListener('load', function() {
                
                var colorThief = new ColorThief();
                var result = colorThief.getColor(img);
                return callback(result);
                
                //- var vibrant = new Vibrant(img);
                //- var swatches = vibrant.swatches()
                //- for (var swatch in swatches)
                //-     if (swatches.hasOwnProperty(swatch) && swatches[swatch])
                //-         console.log(swatch, swatches[swatch].getHex())
                
                //- callback(swatches);

                /*
                * Results into:
                * Vibrant #7a4426
                * Muted #7b9eae
                * DarkVibrant #348945
                * DarkMuted #141414
                * LightVibrant #f3ccb4
                */
            });
        }
        function mergeImage(swatches, callback) {

            var rgb = 'rgb(' + swatches[0] + ', ' + swatches[1] + ', ' + swatches[2] + ')';
            
            var imageObj1 = new Image();
            imageObj1.src = '/images/boxes/back.png';
            imageObj1.onload = function() {
                
                var w = imageObj1.width;
                var h = imageObj1.height;
                var c = document.createElement('canvas');
                c.width = w;
                c.height = h;
                var ctx = c.getContext("2d");
                ctx.fillStyle = rgb;
                ctx.fillRect(0, 0, imageObj1.width, imageObj1.height);
            
                ctx.drawImage(imageObj1, 0, 0, w, h);
                //imageObj2.src = '/images/boxes/front.jpg';
                //imageObj2.onload = function() {
                //ctx.drawImage(imageObj2, 15, 85, 300, 300);
                var img = c.toDataURL("image/png");
                //document.write('<img src="' + img + '" width="' + imageObj1.width + '" height="' + imageObj1.height + '"/>');
                callback(img);
                //}
            };
        }